<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Mimii</title>
    <link href="/2025/05/19/Mimii/"/>
    <url>/2025/05/19/Mimii/</url>
    
    <content type="html"><![CDATA[<h1 id="MIMII-Dataset-Sound-Dataset"><a href="#MIMII-Dataset-Sound-Dataset" class="headerlink" title="MIMII Dataset Sound Dataset"></a>MIMII Dataset Sound Dataset</h1><h2 id="基本逻辑"><a href="#基本逻辑" class="headerlink" title="基本逻辑"></a>基本逻辑</h2><p><img src="/../images/image-20250518170129141.png" alt="image-20250518170129141"></p><p>​首先在原始音频数据中选取一段进行特征提取。上面的红色的是<strong>声谱图（Spectrogram）</strong>：通过将波形转换为频域得到的 <strong>时频图（Spectrogram）</strong>，反映声音能量如何随时间在频率上分布。下面的是 <strong>功率谱密度图（PSD</strong>）：另一种频域表示方式，用于描述在不同频率下的能量分布，常用于判断频率特征然后右边三个带小黄点的是三种独立的神经网路，指的是用不同的模型独立训练，然后到最后一层的融合器中进行汇总。最后两种状态表示检测结果。</p><h1 id="特征提取"><a href="#特征提取" class="headerlink" title="特征提取"></a>特征提取</h1><p><img src="/../images/image-20250515142353638.png" alt="image-20250515142353638"></p><h3 id="🔸-Augment"><a href="#🔸-Augment" class="headerlink" title="🔸 Augment"></a>🔸 <code>Augment</code></h3><ul><li><strong>伪数据增强模块</strong>：只对正常样本进行扰动，生成“伪异常”，训练更鲁棒的模型。</li><li>由调用参数 <code>augment=True</code> 决定是否启用。</li><li>增强后的数据走不同路径并与原始数据合并。</li></ul><h3 id="🔸-HP（High-Pass-Filter）"><a href="#🔸-HP（High-Pass-Filter）" class="headerlink" title="🔸 HP（High-Pass Filter）"></a>🔸 <code>HP</code>（High-Pass Filter）</h3><ul><li><strong>高通滤波器</strong>，过滤掉低于 120Hz 的背景噪声。</li><li>默认截止频率为 120Hz（对应代码中的 <code>fHP=120</code>）。</li></ul><h3 id="🔹-Denoise"><a href="#🔹-Denoise" class="headerlink" title="🔹 Denoise"></a>🔹 <code>Denoise</code></h3><ul><li>对滑窗片段进一步降噪处理，增强信号清晰度，特别有利于检测较弱的异常。</li></ul><h2 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a>模型训练</h2><p><img src="/../images/image-20250518170532532.png" alt="image-20250518170532532"></p><p>​这部分是关于模型集成部分，首先第一部分是预处理部分，也就是第一个绿色的矩形，通过high-pass（高速滤波）来去除低频噪音，同时通过激活时间检测，来检测出哪些是机器发出的声音，去除没用的杂音。然后给了四条不同的通道。</p><ol><li><p>Denoise + MEL + （PCA + Scaler） + AdutoEncoder </p></li><li><p>Denoise + MEL + （PCA + Scaler） + Isolation Forest</p></li><li><p>MEL +  Scaler+ Isolation Forest</p></li><li><p>MEL +  Scaler + SVM</p><p>名词解释：</p><p><strong><code>Denoise</code></strong> ：去噪音</p><p><strong><code>MEL</code></strong> : 提取梅尔频谱</p><p><strong><code>PCA + Scaler</code></strong> : 降维 + 标准化</p><p><strong><code>AutoEncoder</code></strong> : 自编码器检测异常（通常基于重构误差）</p><p><strong><code>Isolation Forest</code></strong>：孤立森林，用于无监督异常检测</p><p><strong><code>PSD</code></strong>：功率谱密度（Power Spectral Density）</p><p><strong><code>SVM</code></strong>：支持向量机，用于分类正常&#x2F;异常</p><p>​    最后通过这个 <strong>Weighted Time Frame Blending</strong> 层将上述四个模型的输出进行 <strong>加权融合</strong>。每个模型的预测结果（异常分数）按时间帧加权平均，得到统一的分数。</p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​本项目基于 MIMII 数据集，提出了一套集成传统机器学习与深度学习方法的工业设备声音异常检测框架。核心创新在于：</p><ol><li>多通道降维与主通道特征提取机制；</li><li>引入降噪优化的 Mel 特征（MEL_den）；</li><li>融合 PSD、Mel、多种模型得分，实现多视角稳健检测。</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/05/03/hello-world/"/>
    <url>/2025/05/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python</title>
    <link href="/2025/05/03/python/"/>
    <url>/2025/05/03/python/</url>
    
    <content type="html"><![CDATA[<h2 id="Pyqt-Designer"><a href="#Pyqt-Designer" class="headerlink" title="Pyqt Designer"></a>Pyqt Designer</h2><h3 id="🧱-Layouts（布局）"><a href="#🧱-Layouts（布局）" class="headerlink" title="🧱 Layouts（布局）"></a>🧱 Layouts（布局）</h3><pre><code class="hljs">用于组织控件的摆放位置和大小，推荐使用，不然拖放控件时排版很难调。</code></pre><h4 id="控件作用"><a href="#控件作用" class="headerlink" title="控件作用:"></a>控件作用:</h4><pre><code class="hljs">Vertical Layout垂直排列控件 Horizontal Layout水平排列控件 Grid Layout表格网格状排列（像 Excel） Form Layout表单排列，左边是标签，右边是输入框</code></pre><h3 id="🪟-Spacers（间隔）"><a href="#🪟-Spacers（间隔）" class="headerlink" title="🪟 Spacers（间隔）"></a>🪟 Spacers（间隔）</h3><pre><code class="hljs">用于撑开控件或布局空隙：</code></pre><h4 id="控件作用-1"><a href="#控件作用-1" class="headerlink" title="控件作用:"></a>控件作用:</h4><pre><code class="hljs"> Horizontal Spacer水平方向填充空白 Vertical Spacer垂直方向填充空白</code></pre><h3 id="🔘-Buttons（按钮类控件）"><a href="#🔘-Buttons（按钮类控件）" class="headerlink" title="🔘 Buttons（按钮类控件）"></a>🔘 Buttons（按钮类控件）</h3><pre><code class="hljs">触发操作用的控件：</code></pre><h4 id="控件作用-2"><a href="#控件作用-2" class="headerlink" title="控件作用"></a>控件作用</h4><pre><code class="hljs">Push Button普通按钮，最常用 ✅Tool Button用于工具栏的小按钮Radio Button单选按钮（多项中只能选一个）Check Box复选框（可多选） ✅Command Link Button像超链接样式的按钮Dialog Button BoxOK/Cancel 等对话按钮组合，用于标准对话框</code></pre><h3 id="📄-Item-Views（基于模型的数据视图）"><a href="#📄-Item-Views（基于模型的数据视图）" class="headerlink" title="📄 Item Views（基于模型的数据视图）"></a>📄 Item Views（基于模型的数据视图）</h3><pre><code class="hljs">用于显示数据表/列表，需配合 model 使用，适合高级用法：</code></pre><h4 id="控件作用-3"><a href="#控件作用-3" class="headerlink" title="控件作用"></a>控件作用</h4><pre><code class="hljs">List View显示数据列表（模型驱动）Tree View显示树状数据结构（如文件夹）Table View表格显示（高级版）Column View栏式导航（不常用）Undo View显示撤销命令栈</code></pre><h3 id="📋-Item-Widgets（项目控件）"><a href="#📋-Item-Widgets（项目控件）" class="headerlink" title="📋 Item Widgets（项目控件）"></a>📋 Item Widgets（项目控件）</h3><pre><code class="hljs">与上面类似，但更适合初学者，直接使用：</code></pre><h4 id="控件作用-4"><a href="#控件作用-4" class="headerlink" title="控件作用"></a>控件作用</h4><pre><code class="hljs">List Widget列表控件（可以直接添加条目） ✅Tree Widget树形控件（如文件树） ✅Table Widget表格控件 ✅</code></pre><h3 id="🧱-Containers（容器类）"><a href="#🧱-Containers（容器类）" class="headerlink" title="🧱 Containers（容器类）"></a>🧱 Containers（容器类）</h3><pre><code class="hljs">可以包含别的控件的“框”：</code></pre><h4 id="控件作用-5"><a href="#控件作用-5" class="headerlink" title="控件作用"></a>控件作用</h4><pre><code class="hljs">Group Box分组框，可带标题 ✅Scroll Area滚动容器，内容可滚动Tool Box折叠式工具栏面板（像分类目录）Tab Widget选项卡面板（像网页标签页） ✅Stacked Widget堆叠控件，一次只显示一页（常用于切换界面）Frame用于添加边框Widget通用控件，可以塞其他控件MDI Area多文档界面，嵌套多个子窗口Dock Widget可拖拽停靠的面板（高级 UI）QAxWidget用于嵌入 ActiveX 控件（极少用）</code></pre><h3 id="✍️-Input-Widgets（输入控件）"><a href="#✍️-Input-Widgets（输入控件）" class="headerlink" title="✍️ Input Widgets（输入控件）"></a>✍️ Input Widgets（输入控件）</h3><pre><code class="hljs">用户输入数据的常用控件：</code></pre><h4 id="控件作用-6"><a href="#控件作用-6" class="headerlink" title="控件作用"></a>控件作用</h4><pre><code class="hljs">Combo Box下拉框（可选项） ✅Font Combo Box字体选择框Line Edit单行文本输入框 ✅Text Edit多行富文本输入框Plain Text Edit多行纯文本输入框Spin Box数字输入框（加减按钮） ✅Double Spin Box支持小数的 spin boxTime Edit / Date Edit / DateTime Edit时间/日期输入框 ✅Dial圆盘样式调节器（不常用）Horizontal/Vertical Scroll Bar滚动条Horizontal/Vertical Slider滑动条（调音量那种） ✅</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
